workflow:
  rules:
    - if: $CI_COMMIT_BRANCH != "main" && $CI_PIPELINE_SOURCE != "merge_request_event"
      when: never
    - when: always

variables:
  IMAGE_NAME: $CI_REGISTRY_IMAGE
  DEV_SERVER_HOST: 18.207.210.221
  DEV_ENDPOINT: http://ec2-18-207-210-221.compute-1.amazonaws.com

stages:
  - build
  - deploy

build_image:
  stage: build
  tags:
    - aws
  before_script:
    - export PACKAGE_JASON_VERSION=$(cat docker/package.json | jq -r .version)
    - export VERSION=$PACKAGE_JASON_VERSION.$CI_PIPELINE_ID
    - echo "VERSION=$VERSION" >> build.env
  script:
    - cd docker/
    - docker build -t $IMAGE_NAME:$VERSION .
  artifacts:
    reports:
      dotenv: build.env

push_image:
  stage: build
  needs:
    - build_image
  dependencies:
    - build_image
  tags:
    - aws
  before_script:
    - docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD $CI_REGISTRY
  script:
    - docker push $IMAGE_NAME:$VERSION

deploy_to_dev:
  stage: deploy
  tags:
    - aws
  before_script:
    - chmod 400 $SSH_PRIVATE_KEY
  script:
    - ssh -o StrictHostKeyChecking=no -i $SSH_PRIVATE_KEY ubuntu@$DEV_SERVER_HOST "
        docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD $CI_REGISTRY &&
        docker run -d -p 80:8080 $IMAGE_NAME:$VERSION"
  environment:
    name: development
    url: $DEV_ENDPOINT